{"name":"Event Extraction System","tagline":"Event Extraction using Natural Language Processing","body":"##Natural Language Processing Course Project\r\n\r\n####Problem Description\r\nThe problem is to extract information about events mentioned in sentences. `Input` includes articles describing events and a schema for that domain such as bombing domain. `Output` is the information about the events in a tabular form of triples where each tuple denotes the relation between two actors and a second table for each actor and all its mentions. `Event extraction` is a key prerequisite for generating structured, machine-readable representations of natural language. Such representations can aid various tasks like question answering, machine translation, novelty detection.\r\n\r\n####Required Files\r\n1. Jars\r\n  - json-simple-1.1.1\r\n  - stanford-corenlp-3.5.1-models\r\n  - stanford-corenlp-3.5.1\r\n2. relgramtuples-app\r\n3. textual-entailment running as service\r\n  - go to textual-entailment directory and run following from terminal\r\n    - sbt\r\n    - service/reStart\r\n\r\n####Recommended way to Run\r\n- Run EventExtraction.java \r\n\r\n####Step by Step Instructions to run\r\n1. Copy required schema lines in `manual_schema_original.txt`\r\n2. Steps to run relgramtuples-app on news articles and store output in `document_relgram_original.txt`\r\n  - save news article in `news_articles.txt`\r\n  - run `ParseDocumentForRelgramsApp.java`, it will output `news_relgram_input.txt`\r\n  - copy `news_relgram_input.txt` in relgramtuples-app directory\r\n  - go to relgramtuples-app directory from terminal and run below command\r\n    - `java -cp lib/relgramtuples-1.0.0-SNAPSHOT-jar-with-dependencies.jar edu.washington.cs.knowitall.relgrams.apps.RelgramTuplesApp --wnHome resources/wordnet3.0 --wnTypesFile resources/wordnet-selected-classes.txt --ne7ModelFile resources/english.muc.7class.nodistsim.crf.ser.gz --ne3ModelFile resources/english.all.3class.nodistsim.crf.ser.gz -mpp resources/engmalt.linear-1.7.mco news_relgram_input.txt document_relgram_original.txt`\r\n  - copy generated `document_relgram_original.txt` in workspace\r\n3. Run following parsers to parse above files\r\n  - `ParseDocument.java`\r\n  - `ParseSchema.java`\r\n4. Run `TextEntail.java` to see desired output\r\n\r\n####Output\r\n- results.txt file\r\n- `Schema_tuple - confidence - Document_tuple`\r\n\r\n","google":"UA-56342639-1","note":"Don't delete this file! It's used internally to help with page regeneration."}